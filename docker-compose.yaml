version: '3'

services:
  auth-db:
    container_name: auth-db
    image: postgres:11
    restart: always
    environment:
      - POSTGRES_DB=auth_db
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=123456
    ports:
      - 5432:5432
  product-db:
    container_name: product-db
    image: postgres:11
    restart: always
    environment:
      - POSTGRES_DB=product_db
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=123456
    ports:
      - 5433:5432
  sales-db:
    container_name: sales-db
    image: mongo:6.0
    restart: always
    environment:
      - MONGODB_DATABASE=sales_db
      - MONGODB_USER=admin
      - MONGODB_PASS=123456
    ports:
      - 27017:27017
      - 28017:28017
  sales_rabbit:
    container_name: sales_rabbit
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 25676:25676
      - 15672:15672
  auth-service:
    container_name: auth-service
    build:
      context: ./api_auth
      dockerfile: Dockerfile
    ports:
      - 8081:8080
    depends_on:
      - auth-db
    environment:
      - DB_HOST=auth-db  # Nome do serviço do PostgreSQL no compose
      - DB_PORT=5432
      - DB_NAME=auth_db
      - DB_USER=admin
      - DB_PASSWORD=123456
      - NODE_ENV=production

  product-service:
    container_name: product-service
    build:
      context: ./product_api
      dockerfile: Dockerfile
    ports:
      - 8082:8080
    depends_on:
      - product-db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://product-db:5432/product_db
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=123456

  sales-service:
    container_name: sales-service
    build:
      context: ./sales_api
      dockerfile: Dockerfile
    ports:
      - 8083:8080
    depends_on:
      - sales-db
      - sales_rabbit
    environment:
      - DB_HOST=auth-db  # Nome do serviço do PostgreSQL no compose
      - DB_PORT=5432
      - DB_NAME=auth_db
      - DB_USER=admin
      - DB_PASSWORD=123456
      - NODE_ENV=production